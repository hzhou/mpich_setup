if [[ $BASH == "/bin/bash" ]]; then
    color="\[\e[0;32m\]"
    reset="\[\e[0m\]"
    PS1="${color}hostname${reset} \w$ ";
else
    PS1="$ ";
fi
export PS1
export HISTCONTROL=erasedups
export EDITOR='vim'
export GIT_EDITOR='vim +"set tw=72 fo+=w noai"'
DISABLE_AUTO_TITLE=true

PATH=$HOME/bin:$HOME/MPI/bin:/usr/local/bin:/usr/bin:/bin:/sbin:/usr/sbin

MPI=$HOME/MPI
CPATH=$MPI/include
LIBRARY_PATH=$MPI/lib
LD_LIBRARY_PATH=$MPI/lib

export PATH CPATH LIBRARY_PATH LD_LIBRARY_PATH

PERL5LIB=$HOME/lib/perl5
MYDEFLIB=$HOME/lib/MyDef
MYDEFSRC=$HOME/projects/MyDef
export PERL5LIB MYDEFLIB
export MYDEFSRC

export MAKEFLAGS="-j 48"
alias ls="ls --color"
alias grep='grep --color=auto'

#----------------------------------------
export CC=
export CXX=
export F77=
export FC=

function set_pgi {
    export PATH=$PATH:/opt/pgi/linux86-64-llvm/19.4/bin
    export CC=pgcc
    export CXX=pgc++
    export F77=pgfortran
    export FC=pgfortran
}

function set_sun {
    export PATH=$PATH:/opt/OracleDeveloperStudio12.6/bin
    export CC=suncc
    export CXX=sunCC
    export F77=sunf77
    export FC=sunf95
}

function set_intel {
    intel=$HOME/intel
    export PATH=$PATH:$intel/bin
    export INTEL_LICENSE_FILE=28518@lic001.cels.anl.gov
    export CC=icc
    export CXX=icpc
    export F77=ifort
    export FC=ifort
}

function set_gcc9 {
    export LD_LIBRARY_PATH=$HOME/opt/gcc-9/lib64:$LD_LIBRARY_PATH
    export CC=gcc-9
    export CXX=g++-9
    export F77=gfortran-9
    export FC=gfortran-9
}
#----------------------------------------

function clone_git {
    git clone ssh://dragontiger.org/media/Repo/$1.git
}

function mpich_pr {
    cd $HOME/pull_requests
    if [[ "$1" =~ ^\d+$ ]] ; then
        rm -rf mpich$1
        perl $HOME/bin/get_mpich_pr.pl $1
        cd mpich$1
    else
        rm -rf mpich-$1
        git clone -b $1 https://github.com/pmodels/mpich mpich-$1
        cd mpich-$1
    fi
}

function mpich_pr_sync {
    if test -f $1 ; then
        cp -v $1 $HOME/mpich-github/$1
    fi
}

function mpich_whitespace {
    cd $HOME/pull_requests
    if test -d mpich-whitespace ; then
        rm -rf mpich-whitespace
    fi
    
    echo git clone mpich-github mpich-whitespace ...
    git clone $HOME/mpich-github mpich-whitespace
    cd mpich-whitespace
    git config core.whitespace blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent

    git fetch origin
    git checkout $1
    git rebase --verbose --exec maint/hooks/pre-commit origin/master
}

function set_lib {
    if test -d _inst ; then
        rm -f $HOME/MPI
        ln -s $PWD/_inst $HOME/MPI
    elif test -n $1 ; then
        rm -f $HOME/MPI
        ln -s $HOME/opt/$1 $HOME/MPI
    fi
    ls -l $HOME/MPI
}

complete -W 'MPICH3.2 MPICH3.3 MPICH-master MPI-coll MPI-debug MPI-fortran MPI-test OMPI4.0 share TOY' set_lib

alias gitlog='git log -n 30 --format="format:%h %ad %s" --date="format:%m/%d %H:%M"'
alias git-log='git log --stat'
alias gitlist='git show --pretty="" --name-only'
alias gitpick='git cherry-pick'

alias gitri="git rebase -i"
alias git_last_merg="git log -1 --merges --pretty=format:'%h'"
function gitrii {
    local commit=`git log -1 --merges --pretty=format:'%h'`
    git rebase -i $commit
}
function git_reset_last_merge {
    local commit=`git log -1 --merges --pretty=format:'%h'`
    git reset --hard $commit
}
alias gitrc="git rebase --continue"
alias gitra="git commit --amend"
alias gitraa="git commit -a --amend"

WORK=$HOME/work
MYMAKE=$WORK/mymake
alias mymake="perl $MYMAKE/mymake.pl"
export MODTARBALL="$WORK/modules.tar.gz"

MYCONFIG="--disable-fortran --disable-romio --enable-g=dbg"
alias mymake_ch3="perl $MYMAKE/mymake.pl --with-device=ch3 $MYCONFIG"
alias mymake_ucx="perl $MYMAKE/mymake.pl --with-device=ch4:ucx $MYCONFIG"
alias mymake_ofi="perl $MYMAKE/mymake.pl --with-device=ch4:ofi $MYCONFIG"

alias update_mymake='pushd $MYMAKE && git pull && popd' 

#---------------------------------------- 
export ch4=src/mpid/ch4/src
export ofi=src/mpid/ch4/netmod/ofi
export ucx=src/mpid/ch4/netmod/ucx
export shm=src/mpid/common/shm
export posix=src/mpid/ch4/shm/posix
export ch4am=src/mpid/ch4/generic/am

export dbglog="-mpich-dbg=file -mpich-dbg-level=verbose -mpich-dbg-filename=dbg%d.log"
#---------------------------------------- 
